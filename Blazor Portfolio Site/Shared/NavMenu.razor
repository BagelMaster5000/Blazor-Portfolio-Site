@inject NavigationManager NavigationManager

<Container Width="Width.Is75">
	<Row TextAlignment="TextAlignment.Center" Padding="Padding.Is1">
		<Div Width="Width.Is25" TextColor="TextColor.Primary">
			<a Class="@GetHomeLinkClass()" href="" @onclick="RefreshAnimationDirectionGoToHome">Home</a>
		</Div>
		<Div Width="Width.Is25" TextColor="TextColor.Primary">
			<a class="@GetProjectsLinkClass()" href="projects" @onclick="RefreshAnimationDirectionGoToProjects">Projects</a>
		</Div>
		<Div Width="Width.Is25" TextColor="TextColor.Primary">
			<a class="@GetResumeLinkClass()" href="resume" @onclick="RefreshAnimationDirectionGoToResume">Resume</a>
		</Div>
		<Div Width="Width.Is25" TextColor="TextColor.Primary">
			<a class="@GetContactLinkClass()" href="contact" @onclick="RefreshAnimationDirectionGoToContact">Contact</a>
		</Div>
	</Row>
</Container>

@code {
	public NavMenu() {
		GlobalVariables.OnPageJump += ForceRefresh;
	}

	#region Get Tab Classes
	private string GetHomeLinkClass() {
		if (GetCurrentPageName() == "Home") {
			return (GlobalVariables.DarkModeActivated) ? "home-link-active-dark" : "home-link-active-light";
		}
		else {
			return "home-link";
		}
	}
	private string GetProjectsLinkClass() {
		if (GetCurrentPageName() == "Projects") {
			return (GlobalVariables.DarkModeActivated) ? "projects-link-active-dark" : "projects-link-active-light";
		}
		else {
			return "projects-link";
		}
	}
	private string GetResumeLinkClass() {
		if (GetCurrentPageName() == "Resume") {
			return (GlobalVariables.DarkModeActivated) ? "resume-link-active-dark" : "resume-link-active-light";
		}
		else {
			return "resume-link";
		}
	}
	private string GetContactLinkClass() {
		if (GetCurrentPageName() == "Contact") {
			return (GlobalVariables.DarkModeActivated) ? "contact-link-active-dark" : "contact-link-active-light";
		}
		else {
			return "contact-link";
		}
	}
	#endregion

	#region Animation Directions
	private void RefreshAnimationDirectionGoToHome() {
		string curPageName = GetCurrentPageName();
		switch (curPageName) {
			case "Home": GlobalVariables.PageAnimationSlideDirection = 0; break;
			case "Projects": GlobalVariables.PageAnimationSlideDirection = -1; break;
			case "Resume": GlobalVariables.PageAnimationSlideDirection = -1; break;
			case "Contact": GlobalVariables.PageAnimationSlideDirection = -1; break;
		}
	}
	private void RefreshAnimationDirectionGoToProjects() {
		string curPageName = GetCurrentPageName();
		switch (curPageName) {
			case "Home": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Projects": GlobalVariables.PageAnimationSlideDirection = 0; break;
			case "Resume": GlobalVariables.PageAnimationSlideDirection = -1; break;
			case "Contact": GlobalVariables.PageAnimationSlideDirection = -1; break;
		}
	}
	private void RefreshAnimationDirectionGoToResume() {
		string curPageName = GetCurrentPageName();
		switch (curPageName) {
			case "Home": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Projects": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Resume": GlobalVariables.PageAnimationSlideDirection = 0; break;
			case "Contact": GlobalVariables.PageAnimationSlideDirection = -1; break;
		}
	}
	private void RefreshAnimationDirectionGoToContact() {
		string curPageName = GetCurrentPageName();
		switch (curPageName) {
			case "Home": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Projects": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Resume": GlobalVariables.PageAnimationSlideDirection = 1; break;
			case "Contact": GlobalVariables.PageAnimationSlideDirection = 0; break;
		}
	}
	#endregion

	#region Helpers
	private string GetCurrentPageName() {
		if (NavigationManager == null) {
			return "";
		}

		string currentUrl = NavigationManager.Uri;

		if (currentUrl.Contains("projects")) { return "Projects"; }
		else if (currentUrl.Contains("resume")) { return "Resume"; }
		else if (currentUrl.Contains("contact")) { return "Contact"; }
		else { return "Home"; }
	}

	private void ForceRefresh() {
		GlobalVariables.PageAnimationSlideDirection = 0;

		StateHasChanged();
	}
	#endregion
}